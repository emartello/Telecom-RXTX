

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Nov 02 16:27:31 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 1.45
    21                           ; Generated 16/11/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _TXREG	set	4013
    55  0000                     _RCREG	set	4014
    56  0000                     _TRISCbits	set	3988
    57  0000                     _SPBRGH	set	4016
    58  0000                     _SPBRG	set	4015
    59  0000                     _PIE1bits	set	3997
    60  0000                     _PIR1bits	set	3998
    61  0000                     _RCSTAbits	set	4011
    62  0000                     _TXSTAbits	set	4012
    63  0000                     _RCSTA	set	4011
    64  0000                     _TXSTA	set	4012
    65  0000                     _TXSTA1bits	set	4012
    66  0000                     _ADRESL	set	4035
    67  0000                     _ADRESH	set	4036
    68  0000                     _ADCON2	set	4032
    69  0000                     _ADCON1	set	4033
    70  0000                     _TRISA	set	3986
    71                           
    72                           ; #config settings
    73  0000                     
    74                           	psect	cinit
    75  007E8C                     __pcinit:
    76                           	opt stack 0
    77  007E8C                     start_initialization:
    78                           	opt stack 0
    79  007E8C                     __initialization:
    80                           	opt stack 0
    81                           
    82                           ; Clear objects allocated to COMRAM (1 bytes)
    83  007E8C  6A0A               	clrf	__pbssCOMRAM& (0+255),c
    84  007E8E                     end_of_initialization:
    85                           	opt stack 0
    86  007E8E                     __end_of__initialization:
    87                           	opt stack 0
    88  007E8E  0100               	movlb	0
    89  007E90  EFC4  F03F         	goto	_main	;jump to C main() function
    90                           
    91                           	psect	bssCOMRAM
    92  00000A                     __pbssCOMRAM:
    93                           	opt stack 0
    94  00000A                     _USART_Status:
    95                           	opt stack 0
    96  00000A                     	ds	1
    97                           
    98                           	psect	cstackCOMRAM
    99  000001                     __pcstackCOMRAM:
   100                           	opt stack 0
   101  000001                     ReadUSART@data:
   102                           	opt stack 0
   103  000001                     WriteUSART@data:
   104                           	opt stack 0
   105  000001                     delay_ms@tempo:
   106                           	opt stack 0
   107  000001                     OpenUSART@spbrg:
   108                           	opt stack 0
   109                           
   110                           ; 2 bytes @ 0x0
   111  000001                     	ds	1
   112  000002                     TransmiteByte@byte:
   113                           	opt stack 0
   114  000002                     RecebeByte@b:
   115                           	opt stack 0
   116                           
   117                           ; 1 bytes @ 0x1
   118  000002                     	ds	1
   119  000003                     ??_delay_ms:
   120  000003                     OpenUSART@config:
   121                           	opt stack 0
   122                           
   123                           ; 1 bytes @ 0x2
   124  000003                     	ds	1
   125  000004                     main@LIGA:
   126                           	opt stack 0
   127                           
   128                           ; 1 bytes @ 0x3
   129  000004                     	ds	1
   130  000005                     main@DESLIGA:
   131                           	opt stack 0
   132                           
   133                           ; 1 bytes @ 0x4
   134  000005                     	ds	1
   135  000006                     main@d1:
   136                           	opt stack 0
   137                           
   138                           ; 1 bytes @ 0x5
   139  000006                     	ds	1
   140  000007                     main@d2:
   141                           	opt stack 0
   142                           
   143                           ; 1 bytes @ 0x6
   144  000007                     	ds	1
   145  000008                     main@d3:
   146                           	opt stack 0
   147                           
   148                           ; 1 bytes @ 0x7
   149  000008                     	ds	1
   150  000009                     main@dado:
   151                           	opt stack 0
   152                           
   153                           ; 1 bytes @ 0x8
   154  000009                     	ds	1
   155                           
   156 ;;
   157 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   158 ;;
   159 ;; *************** function _main *****************
   160 ;; Defined at:
   161 ;;		line 15 in file "main.c"
   162 ;; Parameters:    Size  Location     Type
   163 ;;		None
   164 ;; Auto vars:     Size  Location     Type
   165 ;;  dado            1    8[COMRAM] unsigned char 
   166 ;;  d3              1    7[COMRAM] unsigned char 
   167 ;;  d2              1    6[COMRAM] unsigned char 
   168 ;;  d1              1    5[COMRAM] unsigned char 
   169 ;;  DESLIGA         1    4[COMRAM] unsigned char 
   170 ;;  LIGA            1    3[COMRAM] unsigned char 
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		wreg, status,2, status,0, cstack
   175 ;; Tracked objects:
   176 ;;		On entry : 0/0
   177 ;;		On exit  : 0/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   180 ;;      Params:         0       0       0       0       0       0       0       0       0
   181 ;;      Locals:         6       0       0       0       0       0       0       0       0
   182 ;;      Temps:          0       0       0       0       0       0       0       0       0
   183 ;;      Totals:         6       0       0       0       0       0       0       0       0
   184 ;;Total ram usage:        6 bytes
   185 ;; Hardware stack levels required when called:    2
   186 ;; This function calls:
   187 ;;		_InitPorts
   188 ;;		_InitSerial
   189 ;;		_RecebeByte
   190 ;;		_TransmiteByte
   191 ;;		_delay_ms
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text0
   198  007F88                     __ptext0:
   199                           	opt stack 0
   200  007F88                     _main:
   201                           	opt stack 29
   202                           
   203                           ;main.c: 17: InitPorts();
   204                           
   205                           ;incstack = 0
   206  007F88  EC69  F03F         	call	_InitPorts	;wreg free
   207                           
   208                           ;main.c: 18: InitSerial();
   209  007F8C  EC58  F03F         	call	_InitSerial	;wreg free
   210                           
   211                           ;main.c: 19: unsigned char dado;
   212                           ;main.c: 20: unsigned char d1 = '$';
   213  007F90  0E24               	movlw	36
   214  007F92  6E06               	movwf	main@d1,c
   215                           
   216                           ;main.c: 21: unsigned char d2 = '!';
   217  007F94  0E21               	movlw	33
   218  007F96  6E07               	movwf	main@d2,c
   219                           
   220                           ;main.c: 22: unsigned char d3 = '@';
   221  007F98  0E40               	movlw	64
   222  007F9A  6E08               	movwf	main@d3,c
   223                           
   224                           ;main.c: 23: unsigned char LIGA = 'w';
   225  007F9C  0E77               	movlw	119
   226  007F9E  6E04               	movwf	main@LIGA,c
   227                           
   228                           ;main.c: 24: unsigned char DESLIGA = 'p';
   229  007FA0  0E70               	movlw	112
   230  007FA2  6E05               	movwf	main@DESLIGA,c
   231  007FA4                     
   232                           ;main.c: 27: {
   233                           ;main.c: 28: dado = RecebeByte();
   234  007FA4  EC4A  F03F         	call	_RecebeByte	;wreg free
   235  007FA8  6E09               	movwf	main@dado,c
   236                           
   237                           ;main.c: 29: if(dado == 'L'){
   238  007FAA  0E4C               	movlw	76
   239  007FAC  1809               	xorwf	main@dado,w,c
   240  007FAE  A4D8               	btfss	status,2,c
   241  007FB0  D00E               	goto	l45
   242                           
   243                           ;main.c: 30: TransmiteByte(d1);
   244  007FB2  5006               	movf	main@d1,w,c
   245  007FB4  EC51  F03F         	call	_TransmiteByte
   246                           
   247                           ;main.c: 31: TransmiteByte(d2);
   248  007FB8  5007               	movf	main@d2,w,c
   249  007FBA  EC51  F03F         	call	_TransmiteByte
   250                           
   251                           ;main.c: 32: TransmiteByte(d3);
   252  007FBE  5008               	movf	main@d3,w,c
   253  007FC0  EC51  F03F         	call	_TransmiteByte
   254                           
   255                           ;main.c: 33: TransmiteByte(LIGA);
   256  007FC4  5004               	movf	main@LIGA,w,c
   257  007FC6  EC51  F03F         	call	_TransmiteByte
   258                           
   259                           ;main.c: 34: dado = '0';
   260  007FCA  0E30               	movlw	48
   261  007FCC  6E09               	movwf	main@dado,c
   262  007FCE                     l45:
   263                           
   264                           ;main.c: 35: }
   265                           ;main.c: 36: if(dado == 'L'){
   266  007FCE  0E4C               	movlw	76
   267  007FD0  1809               	xorwf	main@dado,w,c
   268  007FD2  A4D8               	btfss	status,2,c
   269  007FD4  D00E               	goto	l46
   270                           
   271                           ;main.c: 37: TransmiteByte(d1);
   272  007FD6  5006               	movf	main@d1,w,c
   273  007FD8  EC51  F03F         	call	_TransmiteByte
   274                           
   275                           ;main.c: 38: TransmiteByte(d2);
   276  007FDC  5007               	movf	main@d2,w,c
   277  007FDE  EC51  F03F         	call	_TransmiteByte
   278                           
   279                           ;main.c: 39: TransmiteByte(d3);
   280  007FE2  5008               	movf	main@d3,w,c
   281  007FE4  EC51  F03F         	call	_TransmiteByte
   282                           
   283                           ;main.c: 40: TransmiteByte(DESLIGA);
   284  007FE8  5005               	movf	main@DESLIGA,w,c
   285  007FEA  EC51  F03F         	call	_TransmiteByte
   286                           
   287                           ;main.c: 41: dado = '0';
   288  007FEE  0E30               	movlw	48
   289  007FF0  6E09               	movwf	main@dado,c
   290  007FF2                     l46:
   291                           
   292                           ;main.c: 42: }
   293                           ;main.c: 43: delay_ms(100);
   294  007FF2  0E00               	movlw	0
   295  007FF4  6E02               	movwf	delay_ms@tempo+1,c
   296  007FF6  0E64               	movlw	100
   297  007FF8  6E01               	movwf	delay_ms@tempo,c
   298  007FFA  EC82  F03F         	call	_delay_ms	;wreg free
   299  007FFE  D7D2               	goto	l44
   300  008000                     __end_of_main:
   301                           	opt stack 0
   302                           status	equ	0xFD8
   303                           
   304 ;; *************** function _delay_ms *****************
   305 ;; Defined at:
   306 ;;		line 19 in file "config.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;  tempo           2    0[COMRAM] int 
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2, status,0
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   320 ;;      Params:         2       0       0       0       0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0       0       0       0       0
   322 ;;      Temps:          1       0       0       0       0       0       0       0       0
   323 ;;      Totals:         3       0       0       0       0       0       0       0       0
   324 ;;Total ram usage:        3 bytes
   325 ;; Hardware stack levels used:    1
   326 ;; This function calls:
   327 ;;		Nothing
   328 ;; This function is called by:
   329 ;;		_main
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           	psect	text1
   334  007F04                     __ptext1:
   335                           	opt stack 0
   336  007F04                     _delay_ms:
   337                           	opt stack 30
   338                           
   339                           ;config.c: 21: while(tempo--)
   340                           
   341                           ;incstack = 0
   342  007F04  D008               	goto	l18
   343  007F06                     l954:
   344                           
   345                           ;config.c: 22: _delay((unsigned long)((1)*(48000000/4000.0)));
   346  007F06  0E10               	movlw	16
   347  007F08  6E03               	movwf	??_delay_ms& (0+255),c
   348  007F0A  0E94               	movlw	148
   349  007F0C                     u417:
   350  007F0C  2EE8               	decfsz	wreg,f,c
   351  007F0E  D7FE               	bra	u417
   352  007F10  2E03               	decfsz	??_delay_ms& (0+255),f,c
   353  007F12  D7FC               	bra	u417
   354  007F14  D000               	nop2	
   355  007F16                     l18:
   356  007F16  0601               	decf	delay_ms@tempo,f,c
   357  007F18  A0D8               	btfss	status,0,c
   358  007F1A  0602               	decf	delay_ms@tempo+1,f,c
   359  007F1C  2801               	incf	delay_ms@tempo,w,c
   360  007F1E  E1F3               	bnz	l954
   361  007F20  2802               	incf	delay_ms@tempo+1,w,c
   362  007F22  B4D8               	btfsc	status,2,c
   363  007F24  0012               	return	
   364  007F26  D7EF               	goto	l19
   365  007F28                     __end_of_delay_ms:
   366                           	opt stack 0
   367                           wreg	equ	0xFE8
   368                           status	equ	0xFD8
   369                           
   370 ;; *************** function _TransmiteByte *****************
   371 ;; Defined at:
   372 ;;		line 62 in file "main.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;  byte            1    wreg     unsigned char 
   375 ;; Auto vars:     Size  Location     Type
   376 ;;  byte            1    1[COMRAM] unsigned char 
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, status,2, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   386 ;;      Params:         0       0       0       0       0       0       0       0       0
   387 ;;      Locals:         1       0       0       0       0       0       0       0       0
   388 ;;      Temps:          0       0       0       0       0       0       0       0       0
   389 ;;      Totals:         1       0       0       0       0       0       0       0       0
   390 ;;Total ram usage:        1 bytes
   391 ;; Hardware stack levels used:    1
   392 ;; Hardware stack levels required when called:    1
   393 ;; This function calls:
   394 ;;		_WriteUSART
   395 ;; This function is called by:
   396 ;;		_main
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	text2
   401  007EA2                     __ptext2:
   402                           	opt stack 0
   403  007EA2                     _TransmiteByte:
   404                           	opt stack 29
   405                           
   406                           ;incstack = 0
   407                           ;TransmiteByte@byte stored from wreg
   408  007EA2  6E02               	movwf	TransmiteByte@byte,c
   409  007EA4                     
   410                           ;main.c: 64: while(!TXSTA1bits.TRMT);
   411  007EA4  A2AC               	btfss	4012,1,c	;volatile
   412  007EA6  D7FE               	goto	l968
   413                           
   414                           ;main.c: 66: WriteUSART(byte);
   415  007EA8  5002               	movf	TransmiteByte@byte,w,c
   416  007EAA  EC60  F03F         	call	_WriteUSART
   417  007EAE  0012               	return		;funcret
   418  007EB0                     __end_of_TransmiteByte:
   419                           	opt stack 0
   420                           wreg	equ	0xFE8
   421                           status	equ	0xFD8
   422                           
   423 ;; *************** function _WriteUSART *****************
   424 ;; Defined at:
   425 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\USART\uwrite.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;  data            1    wreg     unsigned char 
   428 ;; Auto vars:     Size  Location     Type
   429 ;;  data            1    0[COMRAM] unsigned char 
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   439 ;;      Params:         0       0       0       0       0       0       0       0       0
   440 ;;      Locals:         1       0       0       0       0       0       0       0       0
   441 ;;      Temps:          0       0       0       0       0       0       0       0       0
   442 ;;      Totals:         1       0       0       0       0       0       0       0       0
   443 ;;Total ram usage:        1 bytes
   444 ;; Hardware stack levels used:    1
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		_TransmiteByte
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           	psect	text3
   453  007EC0                     __ptext3:
   454                           	opt stack 0
   455  007EC0                     _WriteUSART:
   456                           	opt stack 29
   457                           
   458                           ;incstack = 0
   459                           ;WriteUSART@data stored from wreg
   460  007EC0  6E01               	movwf	WriteUSART@data,c
   461  007EC2  ACAC               	btfss	4012,6,c	;volatile
   462  007EC4  D003               	goto	l117
   463  007EC6  90AC               	bcf	4012,0,c	;volatile
   464  007EC8  B20A               	btfsc	_USART_Status,1,c
   465  007ECA  80AC               	bsf	4012,0,c	;volatile
   466  007ECC                     l117:
   467  007ECC  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
   468  007ED0  0012               	return		;funcret
   469  007ED2                     __end_of_WriteUSART:
   470                           	opt stack 0
   471                           wreg	equ	0xFE8
   472                           status	equ	0xFD8
   473                           
   474 ;; *************** function _RecebeByte *****************
   475 ;; Defined at:
   476 ;;		line 70 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  b               1    1[COMRAM] unsigned char 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      unsigned char 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   490 ;;      Params:         0       0       0       0       0       0       0       0       0
   491 ;;      Locals:         1       0       0       0       0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0       0       0       0       0
   493 ;;      Totals:         1       0       0       0       0       0       0       0       0
   494 ;;Total ram usage:        1 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; Hardware stack levels required when called:    1
   497 ;; This function calls:
   498 ;;		_ReadUSART
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text4
   505  007E94                     __ptext4:
   506                           	opt stack 0
   507  007E94                     _RecebeByte:
   508                           	opt stack 29
   509                           
   510                           ;main.c: 72: unsigned char b = 0x00;
   511                           
   512                           ;incstack = 0
   513  007E94  0E00               	movlw	0
   514  007E96  6E02               	movwf	RecebeByte@b,c
   515                           
   516                           ;main.c: 74: b = ReadUSART();
   517  007E98  EC73  F03F         	call	_ReadUSART	;wreg free
   518  007E9C  6E02               	movwf	RecebeByte@b,c
   519                           
   520                           ;main.c: 76: return b;
   521  007E9E  5002               	movf	RecebeByte@b,w,c
   522  007EA0  0012               	return	
   523  007EA2                     __end_of_RecebeByte:
   524                           	opt stack 0
   525                           wreg	equ	0xFE8
   526                           status	equ	0xFD8
   527                           
   528 ;; *************** function _ReadUSART *****************
   529 ;; Defined at:
   530 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\USART\uread.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  data            1    0[COMRAM] unsigned char 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      unsigned char 
   537 ;; Registers used:
   538 ;;		wreg, status,2, status,0
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   544 ;;      Params:         0       0       0       0       0       0       0       0       0
   545 ;;      Locals:         1       0       0       0       0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0       0       0       0       0
   547 ;;      Totals:         1       0       0       0       0       0       0       0       0
   548 ;;Total ram usage:        1 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_RecebeByte
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text5
   558  007EE6                     __ptext5:
   559                           	opt stack 0
   560  007EE6                     _ReadUSART:
   561                           	opt stack 29
   562                           
   563                           ;incstack = 0
   564  007EE6  0EF2               	movlw	242
   565  007EE8  160A               	andwf	_USART_Status,f,c
   566  007EEA  ACAB               	btfss	4011,6,c	;volatile
   567  007EEC  D003               	goto	l104
   568  007EEE  900A               	bcf	_USART_Status,0,c
   569  007EF0  B0AB               	btfsc	4011,0,c	;volatile
   570  007EF2  800A               	bsf	_USART_Status,0,c
   571  007EF4                     l104:
   572  007EF4  B4AB               	btfsc	4011,2,c	;volatile
   573  007EF6  840A               	bsf	_USART_Status,2,c
   574  007EF8  B2AB               	btfsc	4011,1,c	;volatile
   575  007EFA  860A               	bsf	_USART_Status,3,c
   576  007EFC  CFAE F001          	movff	4014,ReadUSART@data	;volatile
   577  007F00  5001               	movf	ReadUSART@data,w,c
   578  007F02  0012               	return	
   579  007F04                     __end_of_ReadUSART:
   580                           	opt stack 0
   581                           wreg	equ	0xFE8
   582                           status	equ	0xFD8
   583                           
   584 ;; *************** function _InitSerial *****************
   585 ;; Defined at:
   586 ;;		line 49 in file "main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   600 ;;      Params:         0       0       0       0       0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0       0       0       0       0
   603 ;;      Totals:         0       0       0       0       0       0       0       0       0
   604 ;;Total ram usage:        0 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    1
   607 ;; This function calls:
   608 ;;		_OpenUSART
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text6
   615  007EB0                     __ptext6:
   616                           	opt stack 0
   617  007EB0                     _InitSerial:
   618                           	opt stack 29
   619                           
   620                           ;main.c: 51: OpenUSART(0b01111111
   621                           ;main.c: 52: & 0b10111111
   622                           ;main.c: 53: & 0b11111110
   623                           ;main.c: 54: & 0b11111101
   624                           ;main.c: 55: & 0b11111111
   625                           ;main.c: 56: & 0b11111111,155);
   626                           
   627                           ;incstack = 0
   628  007EB0  0E00               	movlw	0
   629  007EB2  6E02               	movwf	OpenUSART@spbrg+1,c
   630  007EB4  0E9B               	movlw	155
   631  007EB6  6E01               	movwf	OpenUSART@spbrg,c
   632  007EB8  0E3C               	movlw	60
   633  007EBA  EC94  F03F         	call	_OpenUSART
   634  007EBE  0012               	return		;funcret
   635  007EC0                     __end_of_InitSerial:
   636                           	opt stack 0
   637                           wreg	equ	0xFE8
   638                           status	equ	0xFD8
   639                           
   640 ;; *************** function _OpenUSART *****************
   641 ;; Defined at:
   642 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\USART\uopen.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;  config          1    wreg     unsigned char 
   645 ;;  spbrg           2    0[COMRAM] unsigned int 
   646 ;; Auto vars:     Size  Location     Type
   647 ;;  config          1    2[COMRAM] unsigned char 
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, status,2
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   657 ;;      Params:         2       0       0       0       0       0       0       0       0
   658 ;;      Locals:         1       0       0       0       0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0       0       0       0       0
   660 ;;      Totals:         3       0       0       0       0       0       0       0       0
   661 ;;Total ram usage:        3 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_InitSerial
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text7
   671  007F28                     __ptext7:
   672                           	opt stack 0
   673  007F28                     _OpenUSART:
   674                           	opt stack 29
   675                           
   676                           ;incstack = 0
   677                           ;OpenUSART@config stored from wreg
   678  007F28  6E03               	movwf	OpenUSART@config,c
   679  007F2A  0E00               	movlw	0
   680  007F2C  6EAC               	movwf	4012,c	;volatile
   681  007F2E  0E00               	movlw	0
   682  007F30  6EAB               	movwf	4011,c	;volatile
   683  007F32  B003               	btfsc	OpenUSART@config,0,c
   684  007F34  88AC               	bsf	4012,4,c	;volatile
   685  007F36  A203               	btfss	OpenUSART@config,1,c
   686  007F38  D002               	goto	l83
   687  007F3A  8CAC               	bsf	4012,6,c	;volatile
   688  007F3C  8CAB               	bsf	4011,6,c	;volatile
   689  007F3E                     l83:
   690  007F3E  B403               	btfsc	OpenUSART@config,2,c
   691  007F40  8EAC               	bsf	4012,7,c	;volatile
   692  007F42  A603               	btfss	OpenUSART@config,3,c
   693  007F44  D002               	goto	l85
   694  007F46  88AB               	bsf	4011,4,c	;volatile
   695  007F48  D001               	goto	l86
   696  007F4A                     l85:
   697  007F4A  8AAB               	bsf	4011,5,c	;volatile
   698  007F4C                     l86:
   699  007F4C  B803               	btfsc	OpenUSART@config,4,c
   700  007F4E  84AC               	bsf	4012,2,c	;volatile
   701  007F50  989E               	bcf	3998,4,c	;volatile
   702  007F52  BA03               	btfsc	OpenUSART@config,5,c
   703  007F54  86AB               	bsf	4011,3,c	;volatile
   704  007F56  AC03               	btfss	OpenUSART@config,6,c
   705  007F58  D002               	goto	l89
   706  007F5A  8A9D               	bsf	3997,5,c	;volatile
   707  007F5C  D001               	goto	l90
   708  007F5E                     l89:
   709  007F5E  9A9D               	bcf	3997,5,c	;volatile
   710  007F60                     l90:
   711  007F60  9A9E               	bcf	3998,5,c	;volatile
   712  007F62  AE03               	btfss	OpenUSART@config,7,c
   713  007F64  D002               	goto	l91
   714  007F66  889D               	bsf	3997,4,c	;volatile
   715  007F68  D001               	goto	l92
   716  007F6A                     l91:
   717  007F6A  989D               	bcf	3997,4,c	;volatile
   718  007F6C                     l92:
   719  007F6C  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
   720  007F70  5002               	movf	OpenUSART@spbrg+1,w,c
   721  007F72  6EB0               	movwf	4016,c	;volatile
   722  007F74  8AAC               	bsf	4012,5,c	;volatile
   723  007F76  8EAB               	bsf	4011,7,c	;volatile
   724  007F78  9C94               	bcf	3988,6,c	;volatile
   725  007F7A  8E94               	bsf	3988,7,c	;volatile
   726  007F7C  A8AC               	btfss	4012,4,c	;volatile
   727  007F7E  0012               	return	
   728  007F80  BEAC               	btfsc	4012,7,c	;volatile
   729  007F82  0012               	return	
   730  007F84  8C94               	bsf	3988,6,c	;volatile
   731  007F86  0012               	return	
   732  007F88                     __end_of_OpenUSART:
   733                           	opt stack 0
   734                           wreg	equ	0xFE8
   735                           status	equ	0xFD8
   736                           
   737 ;; *************** function _InitPorts *****************
   738 ;; Defined at:
   739 ;;		line 9 in file "config.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, status,2
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   753 ;;      Params:         0       0       0       0       0       0       0       0       0
   754 ;;      Locals:         0       0       0       0       0       0       0       0       0
   755 ;;      Temps:          0       0       0       0       0       0       0       0       0
   756 ;;      Totals:         0       0       0       0       0       0       0       0       0
   757 ;;Total ram usage:        0 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; This function calls:
   760 ;;		Nothing
   761 ;; This function is called by:
   762 ;;		_main
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text8
   767  007ED2                     __ptext8:
   768                           	opt stack 0
   769  007ED2                     _InitPorts:
   770                           	opt stack 30
   771                           
   772                           ;config.c: 11: TRISA = 0xff;
   773                           
   774                           ;incstack = 0
   775  007ED2  6892               	setf	3986,c	;volatile
   776                           
   777                           ;config.c: 13: ADCON1 = 0x0e;
   778  007ED4  0E0E               	movlw	14
   779  007ED6  6EC1               	movwf	4033,c	;volatile
   780                           
   781                           ;config.c: 14: ADCON2 = 0x92;
   782  007ED8  0E92               	movlw	146
   783  007EDA  6EC0               	movwf	4032,c	;volatile
   784                           
   785                           ;config.c: 15: ADRESH = 0x00;
   786  007EDC  0E00               	movlw	0
   787  007EDE  6EC4               	movwf	4036,c	;volatile
   788                           
   789                           ;config.c: 16: ADRESL = 0x00;
   790  007EE0  0E00               	movlw	0
   791  007EE2  6EC3               	movwf	4035,c	;volatile
   792  007EE4  0012               	return		;funcret
   793  007EE6                     __end_of_InitPorts:
   794                           	opt stack 0
   795  0000                     wreg	equ	0xFE8
   796                           status	equ	0xFD8
   797                           wreg	equ	0xFE8
   798                           status	equ	0xFD8
   799                           
   800                           	psect	rparam
   801  0000                     wreg	equ	0xFE8
   802                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay_ms
    _TransmiteByte->_WriteUSART
    _RecebeByte->_ReadUSART
    _InitSerial->_OpenUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     713
                                              3 COMRAM     6     6      0
                          _InitPorts
                         _InitSerial
                         _RecebeByte
                      _TransmiteByte
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2      98
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _TransmiteByte                                        1     1      0      44
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RecebeByte                                           1     1      0      47
                                              1 COMRAM     1     1      0
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (2) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitSerial                                           0     0      0     296
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     296
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _InitPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPorts
   _InitSerial
     _OpenUSART
   _RecebeByte
     _ReadUSART
   _TransmiteByte
     _WriteUSART
   _delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9       A       1       10.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A      20        0.0%
DATA                 0      0       A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Nov 02 16:27:31 2018

                     l18 7F16                       l19 7F06                       l44 7FA4  
                     l45 7FCE                       l46 7FF2                       l90 7F60  
                     l91 7F6A                       l83 7F3E                       l92 7F6C  
                     l85 7F4A                       l86 7F4C                       l89 7F5E  
            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l104 7EF4                      l117 7ECC  
                    l954 7F06                      l968 7EA4             __CFG_CPB$OFF 000000  
                    u417 7F0C             __CFG_CPD$OFF 000000                      wreg 000FE8  
             _TXSTA1bits 000FAC             __CFG_WDT$OFF 000000                     _main 7F88  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$5 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001                    _RCREG 000FAE                    _RCSTA 000FAB  
                  _SPBRG 000FAF            __CFG_USBDIV$1 000000                    _TRISA 000F92  
                  _TXREG 000FAD                    _TXSTA 000FAC            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000          ??_TransmiteByte 0002                    status 000FD8  
         __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000           WriteUSART@data 0001  
        __initialization 7E8C               _InitSerial 7EB0             __end_of_main 8000  
             _RecebeByte 7E94                   ??_main 0004            __activetblptr 000000  
            RecebeByte@b 0002                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3       __size_of_ReadUSART 001E  
                 _SPBRGH 000FB0       __size_of_InitPorts 0014         __end_of_delay_ms 7F28  
         __CFG_XINST$OFF 000000       __size_of_OpenUSART 0060           __CFG_STVREN$ON 000000  
                 main@d1 0006                   main@d2 0007                   main@d3 0008  
             __accesstop 0060  __end_of__initialization 7E8E            ___rparam_used 000001  
            ?_InitSerial 0001               _WriteUSART 7EC0           __pcstackCOMRAM 0001  
            ?_RecebeByte 0001        __end_of_ReadUSART 7F04        __end_of_InitPorts 7EE6  
          ReadUSART@data 0001        __end_of_OpenUSART 7F88                ?_delay_ms 0001  
    __size_of_InitSerial 0010          __CFG_VREGEN$OFF 000000      __size_of_RecebeByte 000E  
                __Hparam 0000                  __Lparam 0000              ?_WriteUSART 0001  
                __pcinit 7E8C                  __ramtop 0800                  __ptext0 7F88  
                __ptext1 7F04                  __ptext2 7EA2                  __ptext3 7EC0  
                __ptext4 7E94                  __ptext5 7EE6                  __ptext6 7EB0  
                __ptext7 7F28                  __ptext8 7ED2               ??_delay_ms 0003  
   end_of_initialization 7E8E    __end_of_TransmiteByte 7EB0                _RCSTAbits 000FAB  
              _TRISCbits 000F94      __size_of_WriteUSART 0012                _TXSTAbits 000FAC  
           ??_InitSerial 0004             ??_RecebeByte 0002            delay_ms@tempo 0001  
    start_initialization 7E8C                _ReadUSART 7EE6                _InitPorts 7ED2  
     __end_of_InitSerial 7EC0                _OpenUSART 7F28       __end_of_RecebeByte 7EA2  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 000A               ?_ReadUSART 0001  
             ?_InitPorts 0001        __size_of_delay_ms 0024               ?_OpenUSART 0001  
           ??_WriteUSART 0001       __end_of_WriteUSART 7ED2                 _PIE1bits 000F9D  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000              ??_ReadUSART 0001  
            ??_InitPorts 0001              ??_OpenUSART 0003          OpenUSART@config 0003  
               __Hrparam 0000                 __Lrparam 0000   __size_of_TransmiteByte 000E  
               _delay_ms 7F04            __size_of_main 0078                 main@LIGA 0004  
               main@dado 0009    __CFG_CPUDIV$OSC1_PLL2 000000           OpenUSART@spbrg 0001  
          _TransmiteByte 7EA2        TransmiteByte@byte 0002              main@DESLIGA 0005  
     __CFG_FOSC$HSPLL_HS 000000           ?_TransmiteByte 0001             _USART_Status 000A  
